name: Release

on:
  workflow_dispatch:

jobs:
  detect:
    runs-on: ubuntu-latest
    outputs:
      buildpacks: ${{ steps.generate-buildpack-matrix.outputs.buildpacks }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Generate Buildpack Matrix
        id: generate-buildpack-matrix
        uses: colincasey/languages-github-actions/.github/actions/generate-buildpack-matrix@main
  check:
    needs: [detect]
    runs-on: ubuntu-latest
    steps:
      - name: Check
        run: echo "${{ needs.detect.outputs.buildpacks }}"
  package:
    needs: [detect]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include: ${{ fromJSON(needs.detect.outputs.buildpacks) }}
    name: Package ${{ matrix.id }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
#      - name: Install musl-tools
#        run: sudo apt-get install musl-tools --no-install-recommends
#      - name: Update Rust toolchain
#        run: rustup update
#      - name: Install Rust linux-musl target
#        run: rustup target add x86_64-unknown-linux-musl
#      - name: Rust Cache
#        uses: Swatinem/rust-cache@v2
#      - name: Install Pack CLI
#        uses: buildpacks/github-actions/setup-pack@v5.2.0
#      - name: Install libcnb-cargo
#        run: cargo install --git https://github.com/heroku/libcnb.rs --branch ccasey-malax-pairing libcnb-cargo
#      - name: Package Buildpack
#        id: libcnb-package
#        run: echo "package=$(cargo libcnb package --release | jq -Rsc '. / "\n" - [""]')" >> "$GITHUB_OUTPUT"
#      - name: Install yj and crane
#        uses: buildpacks/github-actions/setup-tools@v5.2.0
#      - name: Read buildpack metadata (${{ matrix.buildpack }})
#        run: |
#          echo "buildpack_id=$(yj -t < ${{ matrix.buildpack }}/buildpack.toml | jq -r .buildpack.id)" >> $GITHUB_ENV
#          echo "buildpack_version=$(yj -t < ${{ matrix.buildpack }}/buildpack.toml | jq -r .buildpack.version)" >> $GITHUB_ENV